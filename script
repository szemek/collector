#!/usr/bin/env ruby
# encoding: UTF-8

require 'pry'
require 'httparty'
require 'nokogiri'
require 'sequel'
require 'dotenv'
require 'set'
require 'uri'
require 'colored'

class Spider
  attr_accessor :links, :resources

  def initialize(page, host)
    @host = host

    @links = Set.new
    @resources = Set.new

    visit(page)
  end

  def visit(page)
    response = HTTParty.get(page)
    doc = Nokogiri::HTML(response.body)

    links = resources(doc, 'a[href]', 'href')

    scripts = resources(doc, 'script[src]', 'src')
    stylesheets = resources(doc, 'link[rel=stylesheet]', 'href')
    images = resources(doc, 'img[src]', 'src')

    @resources.merge(scripts + stylesheets + images)
    @links.merge(links)
  end

  def resources(document, selector, attribute)
    document.css(selector).map{|e| e[attribute]}.select{|resource| filter_by_host(resource, @host)}
  end

  def filter_by_host(resource, host)
    begin
      uri = URI(resource)
    rescue URI::InvalidURIError => error
      puts "#{error.message}".yellow
      return false
    end

    uri.host == host
  end
end

Dotenv.load

page = ENV['PAGE']
host = ENV['HOST']

spider = Spider.new(page, host)

binding.pry
